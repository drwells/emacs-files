;;----------------------------------------------------------------------------
;; my .emacs file!! yaaaay
;;----------------------------------------------------------------------------
;; remember - to reload, do M-x load-file <enter> <enter> (default name is
;; current file)
;;----------------------------------------------------------------------------
;; Preferences
;;----------------------------------------------------------------------------
(tool-bar-mode -1)
(menu-bar-mode -1)
(scroll-bar-mode -1)
(fset 'yes-or-no-p 'y-or-n-p)       ;; instead of yes-or-no do y-or-n
(setq inhibit-startup-message t)    ;; turn off splash screen
(show-paren-mode t)                 ;; show matching parenthesis
(setq-default indent-tabs-mode nil) ;; these four set tabs to 4 spaces
(setq-default tab-width 4)
(global-font-lock-mode t)           ;; these three turn on syntax highlighting
(load-library "font-lock")
(setq font-lock-maximum-decoration t)
;; fix comments
(require 'newcomment)
;; make the font size right.
(set-face-attribute 'default nil :height 115)

;; weather
;; (load "~/.emacs.d/weather-2012.2.27.2.el")
;; (require 'weather)

;; Pagewise formatting
(add-hook 'text-mode-hook 'auto-fill-mode) ;; wrap long lines.
;; turn on automatic line wrapping at 79 - because it is 1980 and I am clearly
;; using a teletype.
(setq-default fill-column 80)
(setq fill-column 80)

;; delete whitespace when exiting
(add-hook 'before-save-hook (lambda () (delete-trailing-whitespace)))

;; load plugins.
(let ((default-directory "~/.emacs.d/"))
  (normal-top-level-add-subdirs-to-load-path))
(load "~/.emacs.d/display.el")
(load "~/.emacs.d/editing.el")

;; package management stuff
(require 'package)
(add-to-list 'package-archives
             '("marmalade" . "http://marmalade-repo.org/packages/"))
(package-initialize)

;;
;; Language stuff
;;

;; C stuff
(add-hook 'c-mode-common-hook (lambda () (load "~/.emacs.d/cmaster.el")))

;; D stuff
(autoload 'd-mode "d-mode" "Major mode for editing D code." t)
(add-to-list 'auto-mode-alist '("\.d[i]?\'" . d-mode))
(add-to-list 'auto-mode-alist '("/*.\.d$" . d-mode))

;; Haskell stuff
(setq auto-mode-alist (append '(("/*.\.hs$" . haskell-mode)) auto-mode-alist))
(setq haskell-program-name "/usr/bin/ghci")
(add-hook 'haskell-mode-hook 'turn-on-haskell-indentation)
(add-hook 'haskell-mode-hook 'turn-on-haskell-doc-mode)
(require 'inf-haskell)

;; ido mode
(ido-mode 1)
(ido-everywhere 1)
(setq ido-enable-flex-matching t)
(setq ido-file-extensions-order '(".c" ".org" ".el"))

;; Julia stuff
(load "~/.emacs.d/julia-mode.el")
(load "~/.emacs.d/julia.el")
(setq auto-mode-alist (append '(("/*.\.jl$" . julia-mode)) auto-mode-alist))

;; LaTeX stuff
;; (load "~/.emacs.d/vtex.el")
(load "auctex.el" nil t t)
(add-to-list 'auto-mode-alist '("/*.\.tex$" . LaTeX-mode))
(add-hook 'LaTeX-mode-hook
          (lambda ()
            (progn
              (load-file "~/.emacs.d/latexmaster.el")
              (outline-minor-mode))))

;; markdown stuff
(add-to-list 'auto-mode-alist '("/*.\.md$" . markdown-mode))
(add-to-list 'auto-mode-alist '("/*.\.markdown$" . markdown-mode))

;; org-mode stuff
(add-hook 'org-mode-hook
          (lambda ()
            (load-file "~/.emacs.d/orgmaster.el")))
(add-hook 'outline-minor-mode-hook
          (lambda ()
            (define-key outline-minor-mode-map [(shift tab)] 'org-cycle)))

;; Python stuff
(require 'python-mode)
;(require 'flymake-python-pyflakes)
(add-hook 'python-mode-hook 'flymake-python-pyflakes-load)
(setq auto-mode-alist (append '(("/*.\.sage$" . python-mode))
                              auto-mode-alist))
(add-to-list 'auto-mode-alist '("\\.py" . python-mode))

;; Scheme stuff
(setq scheme-program-name "guile")

;; stuff for aquamacs. Ensure that this is the last line so that all
;; the variables are reset correctly. Otherwise do stuff for GNU/Linux.
(if (boundp 'aquamacs-version) (load "~/.aquamacs")
  (setq-default ispell-program-name "aspell"))
